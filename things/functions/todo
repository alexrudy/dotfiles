#
#  todo
#  .dotfiles
#
#  Created by Alexander Rudy on 2016-05-31.
#  Copyright 2016 Alexander Rudy. All rights reserved.
#

LIST=${1:-"Today"}
osascript<<EOF
global newline
set newline to "
"
using terms from application "Things3"
  
  on appendTags(thecontainer, thetags)
    if (count of {tags in thecontainer}) is greater than 0 then
      repeat with thistag in (tags of thecontainer)
        set thisname to name of thistag as text
        if thetags does not contain thisname then
          copy thisname to the end of thetags
        end if
      end repeat
    end if
  end appendTags
  
  on formatDueDate(thetodo)
    set datetext to ""
    tell application "Things3"
      if due date of thetodo is not equal to missing value then
        set ndays to round (((due date of thetodo) - (current date)) / (3600.0 * 24.0)) rounding up
        set duedate to (due date of thetodo)
        
        if ndays is less than 1 then
          set datetext to " !Due Today"
        else
          if ndays is not equal to 1 then
            set datetext to " !Due in " & ndays & " days"
          else
            set datetext to " !Due Tomororw"
          end if
        end if
      end if
    end tell
    return datetext
  end formatDueDate
  
  on formatTodo(thetodo, counter)
    tell application "Things3"
      set todotext to name of thetodo
      
      -- Add star for Today
      if (id of to dos of list "Today") contains id of thetodo then
        set todotext to "â˜… " & todotext
      end if
      
      -- Collect tags
      set thesetags to {}
      appendTags(thetodo, thesetags) of me
      
      -- Add project / area information
      set posttext to ""
      if project of thetodo is not equal to missing value then
        set posttext to posttext & " @" & name of project of thetodo
        appendTags(project of thetodo, thesetags) of me
        if area of project of thetodo is not equal to missing value then
          set posttext to posttext & " / " & name of area of project of thetodo
          appendTags(area of project of thetodo, thesetags) of me
        end if
      else
        if area of thetodo is not equal to missing value then
          set posttext to posttext & " @" & name of area of thetodo
          appendTags(area of thetodo, thesetags) of me
        end if
      end if
      
      if (count of thesetags) is greater than 0 then
        set AppleScript's text item delimiters to {" +"}
        set tagtext to " (+" & (thesetags as text) & ")"
        set todotext to todotext & tagtext
      end if
      
      set todotext to todotext & posttext & formatDueDate(thetodo) of me
      set innertodos to {}
      try
        set innertodos to (to dos of thetodo whose status is open)
      end try
      set innercounter to 0
      repeat with innertodo in innertodos
        if (id of to dos of list "Trash") does not contain (id of innertodo) then
          set innercounter to innercounter + 1
          set thiscounter to counter & "." & innercounter
          set todotext to todotext & newline & "   " & thiscounter & ") " & formatTodo(innertodo, thiscounter) of me
        end if
      end repeat
    end tell
    return todotext
  end formatTodo
  
  on getTodoCollection(thelistname)
    tell application "Things3"
      if thelistname starts with "+" then
        set tagname to characters 2 thru -1 of thelistname as string
        set todos to (to dos of tag tagname whose status is open)
      else if thelistname starts with "@" then
        set areaname to characters 2 thru -1 of thelistname as string
        set todos to (to dos of area areaname whose status is open)
      else if thelistname is in (name of lists) then
        set todos to (to dos of list thelistname whose status is open)
      else if thelistname is in (name of projects) then
        set todos to (to dos of project thelistname whose status is open)
      else if thelistname is in (name of areas) then
        set todos to (to dos of area thelistname whose status is open)
      else if thelistname is in (name of tags) then
        set todos to (to dos of tag thelistname whose status is open)
      else
        error "Can't find list '" & thelistname & "' in Things"
      end if
      return todos
    end tell
  end getTodoCollection
  
  
  tell application "Things3"
    set myList to {}
    set thelistname to "$LIST"
    set todos to getTodoCollection(thelistname) of me
    if todos is not equal to {} and (count of todos) is greater than 0 then
      set counter to 0
      repeat with thetodo in todos
        if (id of to dos of list "Trash") does not contain (id of thetodo) then
          set counter to counter + 1
          set end of myList to (counter as text) & ") " & formatTodo(thetodo, counter as text) of me
        end if
      end repeat
      set AppleScript's text item delimiters to newline
      get myList as text
    end if
  end tell
end using terms from
EOF
