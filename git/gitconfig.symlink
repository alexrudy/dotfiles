
[user]
	name = Alex Rudy
	email = github@alexrudy.net

[alias]

  # Whats going on?
  wtf     = !$DOTFILES/bin/git-wtf

  # Contributor rank
  rank-contributers = !$DOTFILES/bin/git-rank-contributers

  # How many commits
  count   = !git shortlog -sn
  co = checkout
  st = status
  b = branch
  ci = commit

  # Last commit
  last = 'log -1 HEAD'

  # Get the name of the current branch.
  branch-name = "!git rev-parse --abbrev-ref HEAD"

  # Publish this branch to a remote, optionally defaulting to origin.
  publish = "!f() { REMOTE=${1:-origin} shift; git push -u ${REMOTE} $(git branch-name) $@; }; f"

  # Show only branches
  mine = "!git for-each-ref refs/heads/ --format='%(committerdate:short) %(refname:short)' | grep -e alex | sort"

  # Graph log
  glog = log --graph --decorate --oneline

  # Show branches, verbosely, sorted by last touch, with commit messages.
  brv = "!f() { git branch --sort=-creatordate --color=always --format='%(color:reset)%(creatordate:short) %(color:bold white)%(align:2,right)%(upstream:trackshort)%(end)%(color:nobold) %(align:40,left)%(color:yellow)%(refname:short)%(end) %(color:reset)%(contents:subject)'; }; f"

  code-changes = "!git log --format=format: --name-only | egrep -v '^$' | sort | uniq -c | sort -rg | head -10"
  root = rev-parse --show-toplevel

  # list files which have changed since REVIEW_BASE
  # (REVIEW_BASE defaults to 'master' in my zshrc)
  files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")

  # Same as above, but with a diff stat instead of just names
  # (better for interactive use)
  stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

[color]
  diff = auto
  status = auto
  branch = auto
[core]
  excludesfile = ~/.gitignore
[apply]
  whitespace = nowarn
[rerere]
	enabled = 1
[init]
	defaultBranch = main
[pull]
	ff = only
[include]
  path = ~/.gitconfig.local
  path = ~/.config/gitconfig
[push]
	autoSetupRemote = true
